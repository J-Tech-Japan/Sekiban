// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Sekiban.Dcb.Postgres;

#nullable disable

namespace Sekiban.Dcb.Postgres.Migrations
{
    [DbContext(typeof(SekibanDcbDbContext))]
    [Migration("20250806011134_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Sekiban.Dcb.Postgres.DbModels.DbEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("CausationId")
                        .HasColumnType("text");

                    b.Property<string>("CorrelationId")
                        .HasColumnType("text");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ExecutedUser")
                        .HasColumnType("text");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnType("json");

                    b.Property<string>("SortableUniqueId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("EventType");

                    b.HasIndex("SortableUniqueId")
                        .IsUnique()
                        .HasDatabaseName("IX_Events_SortableUniqueId");

                    b.HasIndex("Timestamp");

                    b.ToTable("dcb_events", (string)null);
                });

            modelBuilder.Entity("Sekiban.Dcb.Postgres.DbModels.DbTag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.Property<string>("SortableUniqueId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EventId")
                        .HasDatabaseName("IX_Tags_EventId");

                    b.HasIndex("SortableUniqueId")
                        .HasDatabaseName("IX_Tags_SortableUniqueId");

                    b.HasIndex("Tag")
                        .HasDatabaseName("IX_Tags_Tag");

                    b.HasIndex("Tag", "SortableUniqueId")
                        .HasDatabaseName("IX_Tags_Tag_SortableUniqueId");

                    b.ToTable("dcb_tags", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
